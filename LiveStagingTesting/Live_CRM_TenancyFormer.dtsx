<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="6/10/2019 10:26:41 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="PC2RN3MJ2"
  DTS:CreatorName="WWHA\Hal.Jordan"
  DTS:DTSID="{386DFE3D-41E6-4CB9-87D3-33A39E0B4676}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="14.0.3026.27"
  DTS:LocaleID="2057"
  DTS:ObjectName="Live_CRM_TenancyFormer"
  DTS:PackageType="5"
  DTS:VersionBuild="1"
  DTS:VersionGUID="{A43B1038-031C-4D57-BB77-63E34ADC1D1D}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Execute SQL Task - Step 0"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="if keep table exists, drops table and then renames current table to add KEEP, runs query against OH db and inserts "
      DTS:DTSID="{BFDD0007-3657-437D-B73C-17063D337457}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute SQL Task - Step 0"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{B98F0C27-9E59-411E-8D60-D3B41EEEBFDC}"
          SQLTask:SqlStatementSource="/*** New crm_TenancyFormer using SQL ***/&#xA;use livedynamics;&#xA;&#xA;--1)clear the table out&#xA;IF OBJECT_ID('crm_TenancyFormerKeep', 'U') IS NOT NULL&#xA;  DROP TABLE  crm_TenancyFormerKeep;&#xA;&#xA;IF OBJECT_ID('crm_TenancyFormer') IS NOT NULL EXEC sp_rename 'dbo.crm_TenancyFormer', 'crm_TenancyFormerKEEP';&#xA;&#xA;IF OBJECT_ID('dbo.crm_TenancyFormer', 'U') IS NOT NULL &#xA;  DROP TABLE dbo.crm_TenancyFormer; &#xA;&#xA;&#xA;CREATE TABLE [dbo].[crm_TenancyFormer] (&#xA;[TenantName] varchar(60),&#xA;[TenancyRef] varchar(50),&#xA;[TncyStart] datetime,&#xA;[TncyEnd] datetime,&#xA;[PlaceRef] varchar(50),&#xA;[PersonRef] varchar(50),&#xA;[TncyType] varchar(50),&#xA;[Arrears] money,&#xA;[NetRent] money,&#xA;[GrossRent] money,&#xA;[CurrBalance] money,&#xA;[TncyStatus] varchar(50),&#xA;[TncyCat] varchar(50),&#xA;[StageCode] varchar(50),&#xA;[PaymentMethod] varchar(50),&#xA;[TermReason] varchar(50)&#xA;)&#xA;GO&#xA;&#xA;insert into crm_TenancyFormer (&#xA;[TenantName],&#xA;[TenancyRef],&#xA;[TncyStart],&#xA;[TncyEnd],&#xA;[PlaceRef],&#xA;[PersonRef],&#xA;[TncyType],&#xA;[Arrears],&#xA;[NetRent],&#xA;[GrossRent],&#xA;[CurrBalance],&#xA;[TncyStatus],&#xA;[TncyCat],&#xA;[StageCode],&#xA;[PaymentMethod],&#xA;[TermReason]&#xA;)&#xA;&#xA;&#xA;&#xA;&#xA;select &#xA;&#x9;RTRIM(isnull(substring([CORR-NAME],1,CHARINDEX(';',[CORR-NAME],1) - 1),'')) as TenantName,&#xA;&#x9;RTRIM(isnull([TENANCY-REF],'')) AS TenancyRef,&#xA;&#x9;([TNCY-START]) AS TncyStart, &#xA;&#x9;[TNCY-END] AS TncyEnd,&#xA;&#x9;RTRIM(isnull([PLACE-REF],'')) AS PlaceRef,&#xA;&#x9;RTRIM(isnull([PERSON-REF],'')) AS PersonRef,&#xA;&#x9;RTRIM(isnull([TNCY-TYPE],'')) AS TncyType, &#xA;&#x9;isnull(convert(money,ARREARS),'') AS Arrears,&#xA;&#x9;isnull(convert(money,[NET-RENT]),'') AS NetRent,&#xA;&#x9;isnull(convert(money,&quot;GROSS-RENT&quot;),'') AS GrossRent,&#xA;&#x9;isnull(CONVERT(money,&quot;CURR-BALANCE&quot;),'') AS CurrBalance,&#xA;&#x9;isnull([TNCY-STATUS],'') AS TncyStatus,&#xA;&#x9;isnull([TNCY-CAT],'') AS TncyCat,&#xA;&#x9;isnull([ARREARS-STAGE],'') AS StageCode,&#xA;&#x9;isnull([DESCRIPTION],'') AS PaymentMethod,&#xA;&#x9;isnull([TERM-REASON],'') AS TermReason&#xA;&#xA;&#x9;&#xA;from Openquery(LIVE_OH, &#xA;  'select &#xA;    TENANCY.&quot;ARREARS&quot;,&#xA; &#x9;TENANCY.&quot;TENANCY-REF&quot;,&#xA;&#x9;TENANCY.&quot;CORR-NAME&quot;,&#xA;&#x9;TENANCY.&quot;TNCY-START&quot;, &#xA;&#x9;TENANCY.&quot;TNCY-END&quot;,&#xA;&#x9;TENANCY.&quot;TNCY-SYS-REF&quot;,&#xA;&#x9;TNCYPLACE.&quot;PLACE-REF&quot;,&#xA;&#x9;TNCYPERSON.&quot;MAIN-CONTACT&quot;, &#xA;&#x9;TNCYPERSON.&quot;ON-TNCY&quot;,&#xA;&#x9;TNCYPERSON.&quot;PERSON-REF&quot;,&#xA;&#x9;TENANCY.&quot;TNCY-TYPE&quot;, &#xA;&#x9;TENANCY.&quot;TNCY-CAT&quot;, &#xA;&#x9;TENANCY.&quot;NET-RENT&quot;, &#xA;&#x9;TENANCY.&quot;GROSS-RENT&quot;, &#xA;&#x9;TENANCY.&quot;CURR-BALANCE&quot;, &#xA;&#x9;TENANCY.&quot;TNCY-STATUS&quot;,&#xA;&#x9;TENANCY.&quot;ARREARS-STAGE&quot;,&#xA;&#x9;LOCATION.&quot;LOCATION-STS&quot;, &#xA;&#x9;LOCATION.&quot;LOCATION-TYPE&quot;, &#xA;&#x9;LOCATION.&quot;MGT-AREA&quot;,&#xA;&#x9;TENANCY.&quot;PMT-METHOD&quot;,&#xA;  &#x9;PAYMTMETHODS.&quot;DESCRIPTION&quot;,&#xA;&#x9;TENANCY.&quot;TERM-REASON&quot; &#xA;&#xA;&#x9;  &#xA;from &#xA;&#x9;PUB.&quot;IH-LOCATION&quot; LOCATION,&#xA;&#x9;PUB.&quot;RE-TNCY-PERSON&quot; TNCYPERSON,&#xA;    PUB.&quot;RE-TNCY-PLACE&quot; TNCYPLACE,&#xA;&#x9;PUB.&quot;RE-TENANCY&quot; TENANCY,&#xA;&#x9;PUB.&quot;RE_PAYMT-METHODS&quot; PAYMTMETHODS&#xA;&#xA;where&#xA;&#xA;    TNCYPERSON.&quot;MAIN-CONTACT&quot; = 1&#xA;&#x9;AND  TNCYPERSON.&quot;ON-TNCY&quot; = 1 &#xA;&#x9;AND TENANCY.&quot;TNCY-STATUS&quot; = ''FOR''&#xA;&#x9;AND LOCATION.&quot;MGT-AREA&quot; IN (''1'',''2'',''3'',''4'',''5'',''6'',''7'',''8'',''9'',''10'',''CARE'')&#xA;&#x9;AND LOCATION.&quot;LOCATION-STS&quot; IN  (''O'',''V'')&#xA;&#x9;AND LOCATION.&quot;LOCATION-TYPE&quot; IN (''BUNGALOW'',''FLAT'',''HOUSE'',''MAISONET'',''ROOM'',''STUDIO'')&#xA;&#x9;&#xA;&#x9;AND TNCYPLACE.&quot;ORG-CODE&quot; = TENANCY.&quot;ORG-CODE&quot;&#xA;&#x9;&#xA;&#x9;and TNCYPLACE.&quot;TNCY-SYS-REF&quot; = TENANCY.&quot;TNCY-SYS-REF&quot;&#xA;&#x9;&#xA;&#x9;and TNCYPLACE.&quot;ORG-CODE&quot; = LOCATION.&quot;ORG-CODE&quot;&#xA;&#x9; &#xA;&#x9;and TNCYPLACE.&quot;PLACE-REF&quot; = LOCATION.&quot;PLACE-REF&quot; &#xA;&#x9;&#xA;&#x9;and TENANCY.&quot;ORG-CODE&quot; = TNCYPERSON.&quot;ORG-CODE&quot; &#xA;&#x9;and TENANCY.&quot;TNCY-SYS-REF&quot; = TNCYPERSON.&quot;TNCY-SYS-REF&quot;&#xA;&#x9;AND TENANCY.&quot;PMT-METHOD&quot; = PAYMTMETHODS.&quot;PMT-METHOD&quot; &#xA;&#x9;and TENANCY.&quot;ORG-CODE&quot; = PAYMTMETHODS.&quot;ORG-CODE&quot; &#xA;&#x9;AND TENANCY.&quot;TNCY-END&quot; &gt;= ''2015-03-08''&#xA;    ')&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Execute SQL Task - Step 1"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Deletes rows based on certain values, then where date is 1899 will set the dates to NULL"
      DTS:DTSID="{061892E7-6419-45AF-88C6-CDD7917CC4E7}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute SQL Task - Step 1"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{B98F0C27-9E59-411E-8D60-D3B41EEEBFDC}"
          SQLTask:SqlStatementSource="/*** Delete blank lines from livedynamics ***/&#xA;USE livedynamics;&#xA;&#xA;Delete from crm_TenancyFormer where TenancyRef is null OR TenancyRef='';&#xA;&#xA;/****** Script for sdetting dates to NULL  ******/&#xA;Use livedynamics;&#xA;Update [crm_tenancyFormer] set [TncyStart]= NULL where [TncyStart]='1899-12-30 00:00:00.000';&#xA;Update [crm_tenancyFormer] set [TncyEnd]= NULL where [TncyEnd]='1899-12-30 00:00:00.000';&#xA;&#xA;/** crm_tenancyFormer ***/&#xA;Use livedynamics;&#xA;ALTER TABLE crm_TenancyFormer&#xA;&#x9;ADD ImportTransactionId int,&#xA;&#x9;&#x9;ImportType [char] (1),&#xA;&#x9;&#x9;SubmittedOn datetime,&#xA;&#x9;&#x9;ImportStatus nvarchar (20),&#xA;&#x9;&#x9;LastImportedAttempt datetime,&#xA;&#x9;&#x9;ImportedOn datetime&#xA;GO&#xA;;&#xA;Use livedynamics;&#xA;&#xA;DECLARE @id INT&#xA;SET @id=0&#xA;update crm_TenancyFormer set @id=ImportTransactionId=@id+1&#xA;GO&#xA;;&#xA;update crm_TenancyFormer set ImportType='U';&#xA;update crm_TenancyFormer set SubmittedOn= GetDate();&#xA;update crm_TenancyFormer set Importstatus='Pending';&#xA;&#xA;/** End crm_TenancyFormer **/&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{4070523B-1B7B-4AE4-885B-4D9FC44F3C4E}"
      DTS:From="Package\Execute SQL Task - Step 0"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Execute SQL Task - Step 1" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="204,42"
          Id="Package\Execute SQL Task - Step 0"
          TopLeft="77,29" />
        <NodeLayout
          Size="204,42"
          Id="Package\Execute SQL Task - Step 1"
          TopLeft="296,168" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="179,71">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="219,97"
              Start="0,0"
              End="219,89.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,44.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,44.5"
                    Point2="0,48.5"
                    Point3="4,48.5" />
                  <mssgle:LineSegment
                    End="215,48.5" />
                  <mssgle:CubicBezierSegment
                    Point1="215,48.5"
                    Point2="219,48.5"
                    Point3="219,52.5" />
                  <mssgle:LineSegment
                    End="219,89.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>