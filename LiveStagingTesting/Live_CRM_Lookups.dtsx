<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="6/10/2019 9:52:45 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="PC2RN3MJ2"
  DTS:CreatorName="WWHA\Hal.Jordan"
  DTS:DTSID="{3FBE242C-9D7D-4DE4-A9E8-22B875F42C68}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="14.0.3026.27"
  DTS:LocaleID="2057"
  DTS:ObjectName="Live_CRM_Lookups"
  DTS:PackageType="5"
  DTS:VersionBuild="1"
  DTS:VersionGUID="{7CBAC893-37A1-4D61-8454-A738EBD0306E}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Execute SQL Task - Step 0"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="if keep table exists, drops table and then renames current table to add KEEP, runs query against OH db and inserts"
      DTS:DTSID="{FFA2F7D1-C74F-48EB-B5FF-EA5984A37199}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute SQL Task - Step 0"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{B98F0C27-9E59-411E-8D60-D3B41EEEBFDC}"
          SQLTask:SqlStatementSource="/*** crm_ArrearsStage Using SQL OPENQUERY ***/ &#xA;use livedynamics;&#xA;&#xA;--1)clear the table out&#xA;IF OBJECT_ID('crm_ArrearsStageKeep', 'U') IS NOT NULL&#xA;  DROP TABLE  crm_ArrearsStageKeep;&#xA;&#xA;IF OBJECT_ID('crm_ArrearsStage') IS NOT NULL EXEC sp_rename 'dbo.crm_ArrearsStage', 'crm_ArrearsStageKEEP';&#xA;&#xA;IF OBJECT_ID('dbo.crm_ArrearsStage', 'U') IS NOT NULL &#xA;  DROP TABLE dbo.crm_ArrearsStage; &#xA;&#xA;use livedynamics;&#xA;&#xA;CREATE TABLE [dbo].[crm_ArrearsStage] (&#xA;[StageCode] varchar(50),&#xA;[Description] varchar(80)&#xA;)&#xA;GO&#xA;&#xA;insert into crm_ArrearsStage (&#xA;[StageCode],&#xA;[Description]&#xA;)&#xA;&#xA;&#xA;select RTRIM(isnull(&quot;STAGE-CODE&quot;,'')) AS StageCode,&#xA;&#x9;   RTRIM(isnull(&quot;DESCRIPTION&quot;,'')) AS Description&#xA;&#x9;&#xA;&#x9;&#x9;&#xA; &#xA;from Openquery(LIVE_OH, &#xA;  'select &#xA;&#x9;ARREARSSTAGE.&quot;DESCRIPTION&quot;, &#xA;&#x9;ARREARSSTAGE.&quot;STAGE-CODE&quot; &#xA;from &#xA;&#x9;PUB.&quot;RE_ARREARS-STAGE&quot; ARREARSSTAGE&#xA;&#xA;    ')&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Execute SQL Task - Step 1"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="if keep table exists, drops table and then renames current table to add KEEP, runs query against OH db and inserts"
      DTS:DTSID="{9657445B-9BC4-4FC9-8AC8-57DD3A7C0F71}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute SQL Task - Step 1"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{B98F0C27-9E59-411E-8D60-D3B41EEEBFDC}"
          SQLTask:SqlStatementSource="/*** crm_AssetManagementOfficer Using SQL OPENQUERY ***/ &#xA;use livedynamics;&#xA;&#xA;--1)clear the table out&#xA;IF OBJECT_ID('crm_AssetManagementOfficerKeep', 'U') IS NOT NULL&#xA;  DROP TABLE  crm_AssetManagementOfficerKeep;&#xA;&#xA;IF OBJECT_ID('crm_AssetManagementOfficer') IS NOT NULL EXEC sp_rename 'dbo.crm_AssetManagementOfficer', 'crm_AssetManagementOfficerKEEP';&#xA;&#xA;IF OBJECT_ID('dbo.crm_AssetManagementOfficer', 'U') IS NOT NULL &#xA;  DROP TABLE dbo.crm_AssetManagementOfficer; &#xA;&#xA;use livedynamics;&#xA;&#xA;&#xA;CREATE TABLE [dbo].[crm_AssetManagementOfficer] (&#xA;[OfficerCode] varchar(50),&#xA;[OfficerName] varchar(80),&#xA;[Title] varchar(50),&#xA;[Forname] varchar(50),&#xA;[Surname] varchar(50)&#xA;)&#xA;GO&#xA;&#xA;insert into crm_AssetManagementOfficer (&#xA;[OfficerCode],&#xA;[OfficerName],&#xA;[Title],&#xA;[Forname],&#xA;[Surname])&#xA;&#xA;select &quot;OFFICER-CODE&quot; as OfficerCode, &#xA;&#x9;&quot;FORENAME&quot;+' '+ &quot;SURNAME&quot; AS OfficerName,&#xA;&#x9;&quot;OFCR-TITLE&quot; as Title, &#xA;&#x9;&quot;FORENAME&quot; as Forname, &#xA;&#x9;&quot;SURNAME&quot; as  Surname&#xA;&#x9;&#x9;&#xA; &#xA;from Openquery(LIVE_OH, &#xA;  'select &#xA;    OFFICER.&quot;OFFICER-CODE&quot;, &#xA;&#x9;OFFICER.&quot;OFCR-TITLE&quot;, &#xA;&#x9;OFFICER.&quot;FORENAME&quot;, &#xA;&#x9;OFFICER.&quot;SURNAME&quot; &#xA;&#x9; &#xA;from &#xA;&#x9;&#xA;&#x9;PUB.&quot;IH_OFFICER&quot; OFFICER&#xA;where &#xA;    OFFICER.&quot;RESP-OFCR&quot; = 1&#xA;&#x9;AND OFFICER.&quot;SURNAME&quot; NOT LIKE ''%NOT IN USE%''&#xA;&#x9;&#xA;    ')&#xA;&#xA;&#x9;&#xA;&#x9;&#xA;&#x9;&#xA;&#x9;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Execute SQL Task - Step 10"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Deletes rows based on certain values, then where date is 1899 will set the dates to NULL"
      DTS:DTSID="{9DD3191E-415D-4C45-8004-46B8B944A767}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute SQL Task - Step 10"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{B98F0C27-9E59-411E-8D60-D3B41EEEBFDC}"
          SQLTask:SqlStatementSource="/*** Delete blank lines from livedynamics ***/&#xA;USE livedynamics;&#xA;Delete from crm_ArrearsStage where stagecode is null OR stagecode='';&#xA;Delete from crm_AssetManagementOfficer where OfficerCode is null OR OfficerCode='';&#xA;Delete from crm_BuildingType where BuildingType is null OR BuildingType='';&#xA;Delete from crm_LettingsArea where LettingsArea is null OR LettingsArea=''; &#xA;Delete from crm_LocalAuthority where AreaCode is null OR AreaCode=''; &#xA;Delete from crm_ManagementArea where MgtArea is null OR MgtArea='';  &#xA;Delete from crm_Patch where OfficerCode is null OR OfficerCode=''; &#xA;&#xA;Delete from crm_Scheme where Scheme is null OR Scheme='';&#xA;&#xA;Delete from crm_TenancyType where TncyType is null OR TncyType=''; &#xA;Delete from crm_tenancytype where TncyType='2' AND Description='Fair Rent';&#xA;&#xA;Delete from crm_Estate where EstateCode is null OR EstateCode='';&#xA;&#xA;&#xA;/****** Script for sdetting dates to NULL  ******/&#xA;Use livedynamics;&#xA;&#xA;/*** ALTER tables to ADD 5 remaining colums and set ****/&#xA;&#xA;Use livedynamics;&#xA;&#xA;/** crm_ArrerasStage ***/&#xA;&#xA;ALTER TABLE crm_ArrearsStage&#xA;&#x9;ADD ImportTransactionId int,&#xA;&#x9;&#x9;ImportType [char] (1),&#xA;&#x9;&#x9;SubmittedOn datetime,&#xA;&#x9;&#x9;ImportStatus nvarchar (20),&#xA;&#x9;&#x9;LastImportedAttempt datetime,&#xA;&#x9;&#x9;ImportedOn datetime&#xA;GO&#xA;;&#xA;Use livedynamics;&#xA;DECLARE @id INT&#xA;SET @id=0&#xA;update crm_ArrearsStage set @id=ImportTransactionId=@id+1&#xA;GO&#xA;;&#xA;update crm_ArrearsStage set ImportType='C';&#xA;update crm_ArrearsStage set SubmittedOn= GetDate();&#xA;update crm_ArrearsStage set Importstatus='Pending';&#xA;&#xA;/** End crm_ArrearsStage **/&#xA;&#xA;&#xA;/** crm_AssetManagementOfficer ***/&#xA;&#xA;ALTER TABLE crm_AssetManagementOfficer&#xA;&#x9;ADD ImportTransactionId int,&#xA;&#x9;&#x9;ImportType [char] (1),&#xA;&#x9;&#x9;SubmittedOn datetime,&#xA;&#x9;&#x9;ImportStatus nvarchar (20),&#xA;&#x9;&#x9;LastImportedAttempt datetime,&#xA;&#x9;&#x9;ImportedOn datetime&#xA;GO&#xA;;&#xA;Use livedynamics;&#xA;DECLARE @id INT&#xA;SET @id=0&#xA;update crm_AssetManagementOfficer set @id=ImportTransactionId=@id+1&#xA;GO&#xA;;&#xA;update crm_AssetManagementOfficer set ImportType='C';&#xA;update crm_AssetManagementOfficer set SubmittedOn= GetDate();&#xA;update crm_AssetManagementOfficer set Importstatus='Pending';&#xA;&#xA;/** End crm_AssetManagementOfficer **/&#xA;&#xA;/** crm_BuildingType ***/&#xA;Use livedynamics;&#xA;ALTER TABLE crm_BuildingType&#xA;&#x9;ADD ImportTransactionId int,&#xA;&#x9;&#x9;ImportType [char] (1),&#xA;&#x9;&#x9;SubmittedOn datetime,&#xA;&#x9;&#x9;ImportStatus nvarchar (20),&#xA;&#x9;&#x9;LastImportedAttempt datetime,&#xA;&#x9;&#x9;ImportedOn datetime&#xA;GO&#xA;;&#xA;Use livedynamics;&#xA;&#xA;DECLARE @id INT&#xA;SET @id=0&#xA;update crm_BuildingType set @id=ImportTransactionId=@id+1&#xA;GO&#xA;;&#xA;update crm_BuildingType set ImportType='C';&#xA;update crm_BuildingType set SubmittedOn= GetDate();&#xA;update crm_BuildingType set Importstatus='Pending';&#xA;&#xA;/** End crm_Buildingtype **/&#xA;&#xA;/** crm_LettingsArea ***/&#xA;Use livedynamics;&#xA;ALTER TABLE crm_LettingsArea&#xA;&#x9;ADD ImportTransactionId int,&#xA;&#x9;&#x9;ImportType [char] (1),&#xA;&#x9;&#x9;SubmittedOn datetime,&#xA;&#x9;&#x9;ImportStatus nvarchar (20),&#xA;&#x9;&#x9;LastImportedAttempt datetime,&#xA;&#x9;&#x9;ImportedOn datetime&#xA;GO&#xA;;&#xA;Use livedynamics;&#xA;&#xA;DECLARE @id INT&#xA;SET @id=0&#xA;update crm_LettingsArea set @id=ImportTransactionId=@id+1&#xA;GO&#xA;;&#xA;update crm_LettingsArea set ImportType='C';&#xA;update crm_LettingsArea set SubmittedOn= GetDate();&#xA;update crm_LettingsArea set Importstatus='Pending';&#xA;&#xA;/** End crm_LettingsArea **/&#xA;&#xA;/** crm_LocalAuthority ***/&#xA;Use livedynamics;&#xA;ALTER TABLE crm_LocalAuthority&#xA;&#x9;ADD ImportTransactionId int,&#xA;&#x9;&#x9;ImportType [char] (1),&#xA;&#x9;&#x9;SubmittedOn datetime,&#xA;&#x9;&#x9;ImportStatus nvarchar (20),&#xA;&#x9;&#x9;LastImportedAttempt datetime,&#xA;&#x9;&#x9;ImportedOn datetime&#xA;GO&#xA;;&#xA;Use livedynamics;&#xA;&#xA;DECLARE @id INT&#xA;SET @id=0&#xA;update crm_LocalAuthority set @id=ImportTransactionId=@id+1&#xA;GO&#xA;;&#xA;update crm_LocalAuthority set ImportType='C';&#xA;update crm_LocalAuthority set SubmittedOn= GetDate();&#xA;update crm_LocalAuthority set Importstatus='Pending';&#xA;&#xA;/** End crm_LocalAuthority **/&#xA;&#xA;&#xA;/** crm_ManagementArea ***/&#xA;Use livedynamics;&#xA;ALTER TABLE crm_ManagementArea&#xA;&#x9;ADD ImportTransactionId int,&#xA;&#x9;&#x9;ImportType [char] (1),&#xA;&#x9;&#x9;SubmittedOn datetime,&#xA;&#x9;&#x9;ImportStatus nvarchar (20),&#xA;&#x9;&#x9;LastImportedAttempt datetime,&#xA;&#x9;&#x9;ImportedOn datetime&#xA;GO&#xA;;&#xA;Use livedynamics;&#xA;&#xA;DECLARE @id INT&#xA;SET @id=0&#xA;update crm_ManagementArea set @id=ImportTransactionId=@id+1&#xA;GO&#xA;;&#xA;update crm_ManagementArea set ImportType='C';&#xA;update crm_ManagementArea set SubmittedOn= GetDate();&#xA;update crm_ManagementArea set Importstatus='Pending';&#xA;&#xA;/** End crm_ManagementArea **/&#xA;&#xA;&#xA;/** crm_Patch ***/&#xA;Use livedynamics;&#xA;ALTER TABLE crm_Patch&#xA;&#x9;ADD ImportTransactionId int,&#xA;&#x9;&#x9;ImportType [char] (1),&#xA;&#x9;&#x9;SubmittedOn datetime,&#xA;&#x9;&#x9;ImportStatus nvarchar (20),&#xA;&#x9;&#x9;LastImportedAttempt datetime,&#xA;&#x9;&#x9;ImportedOn datetime&#xA;GO&#xA;;&#xA;Use livedynamics;&#xA;&#xA;DECLARE @id INT&#xA;SET @id=0&#xA;update crm_Patch set @id=ImportTransactionId=@id+1&#xA;GO&#xA;;&#xA;update crm_Patch set ImportType='C';&#xA;update crm_Patch set SubmittedOn= GetDate();&#xA;update crm_Patch set Importstatus='Pending';&#xA;&#xA;/** End crm_Patch **/&#xA;&#xA;/** crm_Scheme ***/&#xA;Use livedynamics;&#xA;ALTER TABLE crm_Scheme&#xA;&#x9;ADD ImportTransactionId int,&#xA;&#x9;&#x9;ImportType [char] (1),&#xA;&#x9;&#x9;SubmittedOn datetime,&#xA;&#x9;&#x9;ImportStatus nvarchar (20),&#xA;&#x9;&#x9;LastImportedAttempt datetime,&#xA;&#x9;&#x9;ImportedOn datetime&#xA;GO&#xA;;&#xA;Use livedynamics;&#xA;&#xA;DECLARE @id INT&#xA;SET @id=0&#xA;update crm_Scheme set @id=ImportTransactionId=@id+1&#xA;GO&#xA;;&#xA;update crm_Scheme set ImportType='C';&#xA;update crm_Scheme set SubmittedOn= GetDate();&#xA;update crm_Scheme set Importstatus='Pending';&#xA;&#xA;/** End crm_Scheme **/&#xA;&#xA;/*** crm_TenancyType ***/&#xA;Use livedynamics;&#xA;ALTER TABLE crm_TenancyType&#xA;&#x9;ADD ImportTransactionId int,&#xA;&#x9;&#x9;ImportType [char] (1),&#xA;&#x9;&#x9;SubmittedOn datetime,&#xA;&#x9;&#x9;ImportStatus nvarchar (20),&#xA;&#x9;&#x9;LastImportedAttempt datetime,&#xA;&#x9;&#x9;ImportedOn datetime&#xA;GO&#xA;;&#xA;Use livedynamics;&#xA;&#xA;DECLARE @id INT&#xA;SET @id=0&#xA;update crm_TenancyType set @id=ImportTransactionId=@id+1&#xA;GO&#xA;;&#xA;update crm_TenancyType set ImportType='C';&#xA;update crm_TenancyType set SubmittedOn= GetDate();&#xA;update crm_TenancyType set Importstatus='Pending';&#xA;&#xA;/** End ccrm_TenancyType **/&#xA;&#xA;/** crm_Estate ***/&#xA;Use livedynamics;&#xA;ALTER TABLE crm_Estate&#xA;&#x9;ADD ImportTransactionId int,&#xA;&#x9;&#x9;ImportType [char] (1),&#xA;&#x9;&#x9;SubmittedOn datetime,&#xA;&#x9;&#x9;ImportStatus nvarchar (20),&#xA;&#x9;&#x9;LastImportedAttempt datetime,&#xA;&#x9;&#x9;ImportedOn datetime&#xA;GO&#xA;;&#xA;Use livedynamics;&#xA;&#xA;DECLARE @id INT&#xA;SET @id=0&#xA;update crm_Estate set @id=ImportTransactionId=@id+1&#xA;GO&#xA;;&#xA;update crm_Estate set ImportType='C';&#xA;update crm_Estate set SubmittedOn= GetDate();&#xA;update crm_Estate set Importstatus='Pending';&#xA;&#xA;/** End crm_Estate  **/&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Execute SQL Task - Step 2"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="if keep table exists, drops table and then renames current table to add KEEP, runs query against OH db and inserts"
      DTS:DTSID="{99A06948-256C-45DF-A3A0-9B3445EA5B98}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute SQL Task - Step 2"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{B98F0C27-9E59-411E-8D60-D3B41EEEBFDC}"
          SQLTask:SqlStatementSource="/*** crm_BuildingType Using SQL OPENQUERY ***/ &#xA;use livedynamics;&#xA;&#xA;--1)clear the table out&#xA;IF OBJECT_ID('crm_BuildingTypeKeep', 'U') IS NOT NULL&#xA;  DROP TABLE  crm_BuildingTypeKeep;&#xA;&#xA;IF OBJECT_ID('crm_BuildingType') IS NOT NULL EXEC sp_rename 'dbo.crm_BuildingType', 'crm_BuildingTypeKEEP';&#xA;&#xA;IF OBJECT_ID('dbo.crm_BuildingType', 'U') IS NOT NULL &#xA;  DROP TABLE dbo.crm_BuildingType; &#xA;&#xA;use livedynamics;&#xA;&#xA;CREATE TABLE [dbo].[crm_BuildingType] (&#xA;[BuildingType] varchar(50),&#xA;[Description] varchar(50)&#xA;)&#xA;GO&#xA;&#xA;insert into crm_BuildingType (&#xA;[BuildingType],&#xA;[Description]&#xA;)&#xA;&#xA;select [BUILDING-TYPE] AS BuildingType, &#xA;     &#x9;[DESCRIPTION] AS Description&#xA;&#xA;&#xA;&#x9;&#x9;&#xA; &#xA;from Openquery(LIVE_OH, &#xA;  'select &#xA;    BUILDINGTYPE.&quot;BUILDING-TYPE&quot;, &#xA;&#x9;BUILDINGTYPE.&quot;DESCRIPTION&quot; &#xA;&#xA;from &#xA;&#x9;&#xA;&#x9;PUB.&quot;IH_BUILDING-TYPE&quot; BUILDINGTYPE&#xA;&#xA;    ')&#xA;&#xA;&#x9;&#xA;&#x9;&#xA;&#x9;&#xA;&#x9;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Execute SQL Task - Step 3"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="if keep table exists, drops table and then renames current table to add KEEP, runs query against OH db and inserts"
      DTS:DTSID="{FE71842E-A846-4455-A84E-1787F3AC6138}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute SQL Task - Step 3"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{B98F0C27-9E59-411E-8D60-D3B41EEEBFDC}"
          SQLTask:SqlStatementSource="/*** crm_LettingsArea Using SQL OPENQUERY ***/ &#xA;use livedynamics;&#xA;&#xA;--1)clear the table out&#xA;IF OBJECT_ID('crm_LettingsAreaKeep', 'U') IS NOT NULL&#xA;  DROP TABLE  crm_LettingsAreaKeep;&#xA;&#xA;IF OBJECT_ID('crm_LettingsArea') IS NOT NULL EXEC sp_rename 'dbo.crm_LettingsArea', 'crm_LettingsAreaKEEP';&#xA;&#xA;IF OBJECT_ID('dbo.crm_LettingsArea', 'U') IS NOT NULL &#xA;  DROP TABLE dbo.crm_LettingsArea; &#xA;&#xA;use livedynamics;&#xA;&#xA;CREATE TABLE [dbo].[crm_LettingsArea] (&#xA;[LettingsArea] varchar(50),&#xA;[Description] varchar(50)&#xA;)&#xA;GO&#xA;&#xA;insert into crm_LettingsArea (&#xA;[LettingsArea],&#xA;[Description]&#xA;)&#xA;&#xA;select &#x9;[SUB-AREA-CODE] AS LettingsArea,&#xA;&#x9;&#x9;[DESCRIPTION] AS Description&#xA;&#xA; &#xA;from Openquery(LIVE_OH, &#xA;  'select &#xA;    SUBAREA.&quot;SUB-AREA-CODE&quot;, &#xA; &#x9;SUBAREA.&quot;DESCRIPTION&quot;&#xA;&#x9; &#xA;from &#xA;&#x9;PUB.&quot;HA-SUB-AREA&quot; SUBAREA&#xA;&#xA;    ')&#xA;&#xA;&#x9;&#xA;&#x9;&#xA;&#x9;&#xA;&#x9;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Execute SQL Task - Step 4"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="if keep table exists, drops table and then renames current table to add KEEP, runs query against OH db and inserts"
      DTS:DTSID="{67AD5FB5-6361-4EEB-A451-7DE7FCAEE633}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute SQL Task - Step 4"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{B98F0C27-9E59-411E-8D60-D3B41EEEBFDC}"
          SQLTask:SqlStatementSource="/*** crm_LocalAuthority Using SQL OPENQUERY ***/ &#xA;use livedynamics;&#xA;&#xA;--1)clear the table out&#xA;IF OBJECT_ID('crm_LocalAuthorityKeep', 'U') IS NOT NULL&#xA;  DROP TABLE  crm_LocalAuthorityKeep;&#xA;&#xA;IF OBJECT_ID('crm_LocalAuthority') IS NOT NULL EXEC sp_rename 'dbo.crm_LocalAuthority', 'crm_LocalAuthorityKEEP';&#xA;&#xA;IF OBJECT_ID('dbo.crm_LocalAuthority', 'U') IS NOT NULL &#xA;  DROP TABLE dbo.crm_LocalAuthority; &#xA;&#xA;use livedynamics;&#xA;&#xA;CREATE TABLE [dbo].[crm_LocalAuthority] (&#xA;[AreaCode] varchar(50),&#xA;[Description] varchar(50)&#xA;)&#xA;GO&#xA;&#xA;insert into crm_LocalAuthority (&#xA;[AreaCode],&#xA;[Description]&#xA;)&#xA;&#xA;select &#x9;[AREA-CODE] AS AreaCode,&#xA;&#x9;&#x9;[DESCRIPTION] AS Description&#xA;&#xA;&#xA;&#xA;from Openquery(LIVE_OH, &#xA;  'select &#xA;  HAAREA.&quot;AREA-CODE&quot;,&#xA;  HAAREA.&quot;DESCRIPTION&quot;&#xA;  &#x9; &#xA;from &#xA;&#x9;&#xA;&#x9;PUB.&quot;HA_AREA&quot; HAAREA&#xA;&#xA;    ')&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Execute SQL Task - Step 5"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="if keep table exists, drops table and then renames current table to add KEEP, runs query against OH db and inserts"
      DTS:DTSID="{4758306B-9C72-4EF3-9B99-04C7BF0C094C}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute SQL Task - Step 5"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{B98F0C27-9E59-411E-8D60-D3B41EEEBFDC}"
          SQLTask:SqlStatementSource="/*** crm_ManagementArea Using SQL OPENQUERY ***/ &#xA;use livedynamics;&#xA;&#xA;--1)clear the table out&#xA;IF OBJECT_ID('crm_ManagementAreaKeep', 'U') IS NOT NULL&#xA;  DROP TABLE  crm_ManagementAreaKeep;&#xA;&#xA;IF OBJECT_ID('crm_ManagementArea') IS NOT NULL EXEC sp_rename 'dbo.crm_ManagementArea', 'crm_ManagementAreaKEEP';&#xA;&#xA;IF OBJECT_ID('dbo.crm_ManagementArea', 'U') IS NOT NULL &#xA;  DROP TABLE dbo.crm_ManagementArea; &#xA;&#xA;use livedynamics;&#xA;&#xA;CREATE TABLE [dbo].[crm_ManagementArea] (&#xA;[MgtArea] varchar(80),&#xA;[Description] varchar(50)&#xA;)&#xA;GO&#xA;&#xA;&#xA;insert into crm_ManagementArea (&#xA;[MgtArea],&#xA;[Description]&#xA;)&#xA;&#xA;select &#x9;[MGT-AREA] AS MgtArea,&#xA;        [DESCRIPTION] AS Description&#xA;&#xA;&#xA;&#xA; &#xA;from Openquery(LIVE_OH, &#xA;  'select &#xA;  MGTAREA.&quot;MGT-AREA&quot;,&#xA;  MGTAREA.&quot;DESCRIPTION&quot;&#xA;     &#xA;&#x9; &#xA;from &#xA;&#x9;PUB.&quot;IH_MGT-AREA&quot; MGTAREA&#xA;&#x9;&#xA;&#xA;    ')&#xA;&#xA;&#x9;&#xA;&#x9;&#xA;&#x9;&#xA;&#x9;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Execute SQL Task - Step 6"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="if keep table exists, drops table and then renames current table to add KEEP, runs query against OH db and inserts"
      DTS:DTSID="{E9A877F7-9093-4A38-A453-06C87FFC7DBA}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute SQL Task - Step 6"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{B98F0C27-9E59-411E-8D60-D3B41EEEBFDC}"
          SQLTask:SqlStatementSource="/*** crm_Patch Using SQL OPENQUERY ***/ &#xA;use livedynamics;&#xA;&#xA;--1)clear the table out&#xA;IF OBJECT_ID('crm_PatchKeep', 'U') IS NOT NULL&#xA;  DROP TABLE  crm_PatchKeep;&#xA;&#xA;IF OBJECT_ID('crm_Patch') IS NOT NULL EXEC sp_rename 'dbo.crm_Patch', 'crm_PatchKEEP';&#xA;&#xA;IF OBJECT_ID('dbo.crm_Patch', 'U') IS NOT NULL &#xA;  DROP TABLE dbo.crm_Patch; &#xA;&#xA;use livedynamics;&#xA;&#xA;&#xA;CREATE TABLE [dbo].[crm_Patch] (&#xA;[OfficerCode] varchar(100),&#xA;[OfficerName] varchar(50),&#xA;[Forename] varchar(50),&#xA;[Surname] varchar(50),&#xA;[Title] varchar(50)&#xA;)&#xA;GO&#xA;&#xA;insert into crm_Patch (&#xA;[OfficerCode],&#xA;[OfficerName],&#xA;[Forename],&#xA;[Surname],&#xA;[Title]&#xA;)&#xA;&#xA;&#xA;select ISNULL(RTRIM([OFFICER-CODE]),'') as OfficerCode, &#xA;&#x9;ISNULL(RTRIM([FORENAME]+' '+ [SURNAME]),'') AS OfficerName,&#xA;&#x9;ISNULL(RTRIM([FORENAME]),'') AS Forname, &#xA;&#x9;ISNULL(RTRIM([SURNAME]),'') AS Surname,&#xA;&#x9;ISNULL(RTRIM([OFCR-TITLE]),'') AS Title &#xA;&#xA;from Openquery(LIVE_OH, &#xA;&#xA;  'select  &quot;OFFICER-CODE&quot;,&#xA;&#x9;&#x9;&#x9;&quot;FORENAME&quot;,&#xA;            &quot;SURNAME&quot;,&#xA;&#x9;&#x9;&#x9;&quot;OFCR-TITLE&quot;&#xA;&#x9;&#x9;&#x9;&#xA;&#xA;from &#xA;&#x9;PUB.&quot;IH_OFFICER&quot; OFFICER &#xA;where &quot;OFFICER-CODE&quot; NOT IN &#xA;&#x9;&#x9;(''8HM'',''CEO'',''FD'',''HO01'',''OD'')&#xA;AND OFFICER.SURNAME NOT LIKE ''%NIU%''&#xA;AND OFFICER.&quot;ARREARS-OFCR&quot; = 1&#x9;&#xA;    ') &#xA;&#xA;&#xA;&#x9;&#xA;&#x9;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Execute SQL Task - Step 7"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{5824A02A-6169-4F5D-8929-CF2A34E71E60}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute SQL Task - Step 7"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{B98F0C27-9E59-411E-8D60-D3B41EEEBFDC}"
          SQLTask:SqlStatementSource="/*** crm_Scheme Using SQL OPENQUERY ***/ &#xA;use livedynamics;&#xA;&#xA;--1)clear the table out&#xA;IF OBJECT_ID('crm_SchemeKeep', 'U') IS NOT NULL&#xA;  DROP TABLE  crm_SchemeKeep;&#xA;&#xA;IF OBJECT_ID('crm_Scheme') IS NOT NULL EXEC sp_rename 'dbo.crm_Scheme', 'crm_SchemeKEEP';&#xA;&#xA;IF OBJECT_ID('dbo.crm_Scheme', 'U') IS NOT NULL &#xA;  DROP TABLE dbo.crm_Scheme; &#xA;&#xA;use livedynamics;&#xA;&#xA;&#xA;CREATE TABLE [dbo].[crm_Scheme] (&#xA;[Scheme] varchar(80),&#xA;[Description] varchar(50)&#xA;)&#xA;GO&#xA;&#xA;&#xA;insert into crm_Scheme (&#xA;[Scheme],&#xA;[Description]&#xA;)&#xA;&#xA;select ISNULL(RTRIM([SCHEME]),'') as Scheme, &#xA;&#x9;ISNULL(RTRIM([DESCRIPTION]),'') AS Description&#xA;&#x9; &#xA;&#xA;from Openquery(LIVE_OH, &#xA;&#xA;  'select  &quot;SCHEME&quot;,&#xA;&#x9;&#x9;&#x9;&quot;DESCRIPTION&quot;&#xA;from &#xA;&#x9;PUB.&quot;IH_SCHEME&quot; SCHEME&#xA;&#xA;    ') &#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Execute SQL Task - Step 8"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="if keep table exists, drops table and then renames current table to add KEEP, runs query against OH db and inserts"
      DTS:DTSID="{7D374158-6438-4419-BAF3-566CECFF172D}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute SQL Task - Step 8"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{B98F0C27-9E59-411E-8D60-D3B41EEEBFDC}"
          SQLTask:SqlStatementSource="/*** crm_TenancyType Using SQL OPENQUERY ***/ &#xA;use livedynamics;&#xA;&#xA;--1)clear the table out&#xA;IF OBJECT_ID('crm_TenancyTypeKeep', 'U') IS NOT NULL&#xA;  DROP TABLE  crm_TenancyTypeKeep;&#xA;&#xA;IF OBJECT_ID('crm_TenancyType') IS NOT NULL EXEC sp_rename 'dbo.crm_TenancyType', 'crm_TenancyTypeKEEP';&#xA;&#xA;IF OBJECT_ID('dbo.crm_TenancyType', 'U') IS NOT NULL &#xA;  DROP TABLE dbo.crm_TenancyType; &#xA;&#xA;use livedynamics;&#xA;&#xA;&#xA;CREATE TABLE [dbo].[crm_TenancyType] (&#xA;[TncyType] varchar(50),&#xA;[Description] varchar(50)&#xA;)&#xA;GO&#xA;&#xA;&#xA;insert into crm_TenancyType (&#xA;[TncyType],&#xA;[Description]&#xA;)&#xA;&#xA;&#xA;select ISNULL(RTRIM([TNCY-TYPE]),'') as TncyType, &#xA;&#x9;ISNULL(RTRIM([DESCRIPTION]),'') AS Description&#xA;&#x9; &#xA;from Openquery(LIVE_OH, &#xA;&#xA;  'select  DISTINCT &quot;TNCY-TYPE&quot;,&#x9;&#xA;  &quot;DESCRIPTION&quot;&#xA;  &#xA;  from &#xA;&#x9;PUB.&quot;RE-TNCY-TYPE&quot; TNCYTYPE&#xA;&#xA;    ') &#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Execute SQL Task - Step 9"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="if keep table exists, drops table and then renames current table to add KEEP, runs query against OH db and inserts"
      DTS:DTSID="{42C91AAC-9460-49AC-B439-09DF3F4D11D3}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute SQL Task - Step 9"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{B98F0C27-9E59-411E-8D60-D3B41EEEBFDC}"
          SQLTask:SqlStatementSource="/*** crm_Estate Using SQL OPENQUERY ***/ &#xA;use livedynamics;&#xA;&#xA;--1)clear the table out&#xA;IF OBJECT_ID('crm_EstateKeep', 'U') IS NOT NULL&#xA;  DROP TABLE  crm_EstateKeep;&#xA;&#xA;IF OBJECT_ID('crm_Estate') IS NOT NULL EXEC sp_rename 'dbo.crm_Estate', 'crm_EstateKEEP';&#xA;&#xA;IF OBJECT_ID('dbo.crm_Estate', 'U') IS NOT NULL &#xA;  DROP TABLE dbo.crm_Estate; &#xA;&#xA;use livedynamics;&#xA;&#xA;CREATE TABLE [dbo].[crm_Estate] (&#xA;[EstateCode] varchar(50),&#xA;[EstateName] varchar(80)&#xA;)&#xA;GO&#xA;&#xA;&#xA;&#xA;insert into crm_Estate (&#xA;[EstateCode],&#xA;[EstateName]&#xA;)&#xA;&#xA;select  [Estate-Code] AS EstateCode,&#xA;&#x9;&#x9;[DESCRIPTION] AS EstateName&#xA;&#xA;&#xA;&#x9;&#xA; &#xA;from Openquery(LIVE_OH, &#xA;  'select &#xA;&#xA; ESTATE.&quot;ESTATE-CODE&quot;, &#xA; ESTATE.&quot;DESCRIPTION&quot; &#xA;from &#xA;&#xA;PUB.&quot;IH_ESTATE&quot; ESTATE&#xA;&#xA;    &#xA;&#xA;    ')&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{BABCE101-4BFD-408C-8BAC-BCDF34524EF2}"
      DTS:From="Package\Execute SQL Task - Step 0"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Execute SQL Task - Step 1" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{CB36237A-CA4A-4A64-ABC0-321B1891216A}"
      DTS:From="Package\Execute SQL Task - Step 1"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Execute SQL Task - Step 2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{132B3695-614C-4F7B-9162-82C5C2FEDA82}"
      DTS:From="Package\Execute SQL Task - Step 2"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Execute SQL Task - Step 3" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{DB1E7175-DB72-48C6-9F36-F8CDB2BEF370}"
      DTS:From="Package\Execute SQL Task - Step 3"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Execute SQL Task - Step 4" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{858615BA-6FA9-41F8-B1A8-BF26508A4071}"
      DTS:From="Package\Execute SQL Task - Step 4"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Execute SQL Task - Step 5" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{7B0EB838-A8DB-403E-8C98-475CE3211E25}"
      DTS:From="Package\Execute SQL Task - Step 5"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\Execute SQL Task - Step 6" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 6]"
      DTS:CreationName=""
      DTS:DTSID="{FDBE492B-40D3-49BD-938D-8FEF1FBEEBE0}"
      DTS:From="Package\Execute SQL Task - Step 6"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 6"
      DTS:To="Package\Execute SQL Task - Step 7" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 7]"
      DTS:CreationName=""
      DTS:DTSID="{BA5A828F-BC2E-4408-B0AC-2F615BC233CB}"
      DTS:From="Package\Execute SQL Task - Step 7"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 7"
      DTS:To="Package\Execute SQL Task - Step 8" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 8]"
      DTS:CreationName=""
      DTS:DTSID="{1EEBDB14-73A9-49CE-9712-E7F41EA4AA9B}"
      DTS:From="Package\Execute SQL Task - Step 8"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 8"
      DTS:To="Package\Execute SQL Task - Step 9" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 9]"
      DTS:CreationName=""
      DTS:DTSID="{CF06662E-D8E5-45ED-A0FB-8FF04277E1FE}"
      DTS:From="Package\Execute SQL Task - Step 9"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 9"
      DTS:To="Package\Execute SQL Task - Step 10" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="204,42"
          Id="Package\Execute SQL Task - Step 0"
          TopLeft="32,11" />
        <NodeLayout
          Size="204,42"
          Id="Package\Execute SQL Task - Step 1"
          TopLeft="273,14" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="236,33.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="37,0"
              Start="0,0"
              End="29.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="29.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="214,43"
          Id="Package\Execute SQL Task - Step 2"
          TopLeft="510,20" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="477,38.25">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="33,0"
              Start="0,0"
              End="25.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="25.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="204,42"
          Id="Package\Execute SQL Task - Step 3"
          TopLeft="778,23" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="724,42.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="54,0"
              Start="0,0"
              End="46.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="46.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="204,42"
          Id="Package\Execute SQL Task - Step 4"
          TopLeft="1036,25" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="982,45">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="54,0"
              Start="0,0"
              End="46.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="46.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="204,42"
          Id="Package\Execute SQL Task - Step 5"
          TopLeft="1038,224" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="1139,67">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,157"
              Start="0,0"
              End="0,149.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,149.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="204,42"
          Id="Package\Execute SQL Task - Step 6"
          TopLeft="778,228" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="1038,247">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-56,0"
              Start="0,0"
              End="-48.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-48.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="213,42"
          Id="Package\Execute SQL Task - Step 7"
          TopLeft="531,229" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 6]"
          TopLeft="778,249.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-34,0"
              Start="0,0"
              End="-26.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-26.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="217,42"
          Id="Package\Execute SQL Task - Step 8"
          TopLeft="276,228" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 7]"
          TopLeft="531,249.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-38,0"
              Start="0,0"
              End="-30.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-30.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="217,42"
          Id="Package\Execute SQL Task - Step 9"
          TopLeft="28,228" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 8]"
          TopLeft="276,249">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-31,0"
              Start="0,0"
              End="-23.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-23.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="210,42"
          Id="Package\Execute SQL Task - Step 10"
          TopLeft="39,370" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 9]"
          TopLeft="140.25,270">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,100"
              Start="0,0"
              End="0,92.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,92.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>